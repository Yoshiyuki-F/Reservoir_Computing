[project]
name = "reservoir"
version = "0.1.0"
description = "JAX-based Reservoir Computing with GPU acceleration"
authors = [
    { name = "yoshi", email = "yossyf1147@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "numpy (>=2.2.6,<3.0.0)",
    "matplotlib (>=3.10.3,<4.0.0)",
    "pytest (>=8.4.1,<9.0.0)",
    "pydantic>=2.0.0,<3.0.0",
    "jax[cuda12] (>=0.7.0,<0.8.0)",
    "jax-cuda12-plugin (>=0.7.0,<0.8.0)",
    "jax-cuda12-pjrt (>=0.7.0,<0.8.0)",
]

[tool.uv]
dev-dependencies = []

[project.scripts]
reservoir-cli = "reservoir.cli:main"

[tool.uv.scripts]
# GPU test execution (replaces scripts/test-gpu.sh)
test-gpu = { cmd = ["python", "tests/test_cuda.py"], env = { JAX_PLATFORMS = "cuda", XLA_PYTHON_CLIENT_PREALLOCATE = "false" } }
# GPU simple test execution
test-simple-gpu = { cmd = ["python", "tests/test_simple.py"], env = { JAX_PLATFORMS = "cuda", XLA_PYTHON_CLIENT_PREALLOCATE = "false" } }
# GPU CLI demo with sine wave config (replaces scripts/demo-gpu.sh)
demo-sine-gpu = { cmd = ["python", "-m", "reservoir.cli", "--config", "configs/sine_wave_demo_config.json", "--no-gpu-check"], env = { JAX_PLATFORMS = "cuda", XLA_PYTHON_CLIENT_PREALLOCATE = "false" } }
# GPU CLI demo with lorenz config  
demo-lorenz-gpu = { cmd = ["python", "-m", "reservoir.cli", "--lorenz", "--config", "configs/lorenz_demo_config.json", "--no-gpu-check"], env = { JAX_PLATFORMS = "cuda", XLA_PYTHON_CLIENT_PREALLOCATE = "false" } }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[[tool.uv.index]]
name = "jax_cuda_releases"
url = "https://storage.googleapis.com/jax-releases/jax_cuda_releases.html"
